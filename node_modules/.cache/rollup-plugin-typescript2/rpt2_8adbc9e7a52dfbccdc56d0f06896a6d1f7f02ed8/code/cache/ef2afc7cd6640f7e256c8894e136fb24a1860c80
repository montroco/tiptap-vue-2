{"code":"import { NodeView, } from '@tiptap/core';\r\nimport Vue from 'vue';\r\nimport { VueRenderer } from './VueRenderer';\r\nexport const nodeViewProps = {\r\n    editor: {\r\n        type: Object,\r\n        required: true,\r\n    },\r\n    node: {\r\n        type: Object,\r\n        required: true,\r\n    },\r\n    decorations: {\r\n        type: Object,\r\n        required: true,\r\n    },\r\n    selected: {\r\n        type: Boolean,\r\n        required: true,\r\n    },\r\n    extension: {\r\n        type: Object,\r\n        required: true,\r\n    },\r\n    getPos: {\r\n        type: Function,\r\n        required: true,\r\n    },\r\n    updateAttributes: {\r\n        type: Function,\r\n        required: true,\r\n    },\r\n    deleteNode: {\r\n        type: Function,\r\n        required: true,\r\n    },\r\n};\r\nclass VueNodeView extends NodeView {\r\n    mount() {\r\n        var _a, _b;\r\n        const props = {\r\n            editor: this.editor,\r\n            node: this.node,\r\n            decorations: this.decorations,\r\n            selected: false,\r\n            extension: this.extension,\r\n            getPos: () => this.getPos(),\r\n            updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\r\n            deleteNode: () => this.deleteNode(),\r\n        };\r\n        const onDragStart = this.onDragStart.bind(this);\r\n        this.decorationClasses = Vue.observable({\r\n            value: this.getDecorationClasses(),\r\n        });\r\n        // @ts-ignore\r\n        const vue = (_b = (_a = this.editor.contentComponent) === null || _a === void 0 ? void 0 : _a.$options._base) !== null && _b !== void 0 ? _b : Vue; // eslint-disable-line\r\n        const Component = vue.extend(this.component).extend({\r\n            props: Object.keys(props),\r\n            provide: () => {\r\n                return {\r\n                    onDragStart,\r\n                    decorationClasses: this.decorationClasses,\r\n                };\r\n            },\r\n        });\r\n        this.renderer = new VueRenderer(Component, {\r\n            parent: this.editor.contentComponent,\r\n            propsData: props,\r\n        });\r\n    }\r\n    get dom() {\r\n        if (!this.renderer.element.hasAttribute('data-node-view-wrapper')) {\r\n            throw Error('Please use the NodeViewWrapper component for your node view.');\r\n        }\r\n        return this.renderer.element;\r\n    }\r\n    get contentDOM() {\r\n        if (this.node.isLeaf) {\r\n            return null;\r\n        }\r\n        const contentElement = this.dom.querySelector('[data-node-view-content]');\r\n        return (contentElement || this.dom);\r\n    }\r\n    update(node, decorations) {\r\n        const updateProps = (props) => {\r\n            this.decorationClasses.value = this.getDecorationClasses();\r\n            this.renderer.updateProps(props);\r\n        };\r\n        if (typeof this.options.update === 'function') {\r\n            const oldNode = this.node;\r\n            const oldDecorations = this.decorations;\r\n            this.node = node;\r\n            this.decorations = decorations;\r\n            return this.options.update({\r\n                oldNode,\r\n                oldDecorations,\r\n                newNode: node,\r\n                newDecorations: decorations,\r\n                updateProps: () => updateProps({ node, decorations }),\r\n            });\r\n        }\r\n        if (node.type !== this.node.type) {\r\n            return false;\r\n        }\r\n        if (node === this.node && this.decorations === decorations) {\r\n            return true;\r\n        }\r\n        this.node = node;\r\n        this.decorations = decorations;\r\n        updateProps({ node, decorations });\r\n        return true;\r\n    }\r\n    selectNode() {\r\n        this.renderer.updateProps({\r\n            selected: true,\r\n        });\r\n    }\r\n    deselectNode() {\r\n        this.renderer.updateProps({\r\n            selected: false,\r\n        });\r\n    }\r\n    getDecorationClasses() {\r\n        return (this.decorations\r\n            // @ts-ignore\r\n            .map(item => item.type.attrs.class)\r\n            .flat()\r\n            .join(' '));\r\n    }\r\n    destroy() {\r\n        this.renderer.destroy();\r\n    }\r\n}\r\nexport function VueNodeViewRenderer(component, options) {\r\n    return (props) => {\r\n        // try to get the parent component\r\n        // this is important for vue devtools to show the component hierarchy correctly\r\n        // maybe it’s `undefined` because <editor-content> isn’t rendered yet\r\n        if (!props.editor.contentComponent) {\r\n            return {};\r\n        }\r\n        return new VueNodeView(component, props, options);\r\n    };\r\n}\r\n//# sourceMappingURL=VueNodeViewRenderer.js.map","references":["/Users/jasper/Development/Montro/tiptap-vue-2/node_modules/@tiptap/core/dist/packages/core/src/index.d.ts","/Users/jasper/Development/Montro/tiptap-vue-2/node_modules/@tiptap/pm/model/dist/index.d.ts","/Users/jasper/Development/Montro/tiptap-vue-2/node_modules/@tiptap/pm/view/dist/index.d.ts","/Users/jasper/Development/Montro/tiptap-vue-2/node_modules/vue/types/index.d.ts","/Users/jasper/Development/Montro/tiptap-vue-2/node_modules/vue/types/umd.d.ts","/Users/jasper/Development/Montro/tiptap-vue-2/src/Editor.ts","/Users/jasper/Development/Montro/tiptap-vue-2/src/VueRenderer.ts"],"map":"{\"version\":3,\"file\":\"VueNodeViewRenderer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/VueNodeViewRenderer.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jasper/Development/Montro/tiptap-vue-2/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/VueNodeViewRenderer.d.ts","writeByteOrderMark":false,"text":"import { DecorationWithType, NodeViewRenderer, NodeViewRendererOptions } from '@tiptap/core';\r\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model';\r\nimport { Decoration } from '@tiptap/pm/view';\r\nimport Vue from 'vue';\r\nimport { PropType, VueConstructor } from 'vue/types/umd';\r\nexport declare const nodeViewProps: {\r\n    editor: {\r\n        type: PropType<import(\"@tiptap/core\").Editor>;\r\n        required: true;\r\n    };\r\n    node: {\r\n        type: PropType<ProseMirrorNode>;\r\n        required: true;\r\n    };\r\n    decorations: {\r\n        type: PropType<DecorationWithType[]>;\r\n        required: true;\r\n    };\r\n    selected: {\r\n        type: PropType<boolean>;\r\n        required: true;\r\n    };\r\n    extension: {\r\n        type: PropType<import(\"@tiptap/core\").Node<any, any>>;\r\n        required: true;\r\n    };\r\n    getPos: {\r\n        type: PropType<() => number>;\r\n        required: true;\r\n    };\r\n    updateAttributes: {\r\n        type: PropType<(attributes: Record<string, any>) => void>;\r\n        required: true;\r\n    };\r\n    deleteNode: {\r\n        type: PropType<() => void>;\r\n        required: true;\r\n    };\r\n};\r\nexport interface VueNodeViewRendererOptions extends NodeViewRendererOptions {\r\n    update: ((props: {\r\n        oldNode: ProseMirrorNode;\r\n        oldDecorations: Decoration[];\r\n        newNode: ProseMirrorNode;\r\n        newDecorations: Decoration[];\r\n        updateProps: () => void;\r\n    }) => boolean) | null;\r\n}\r\nexport declare function VueNodeViewRenderer(component: Vue | VueConstructor, options?: Partial<VueNodeViewRendererOptions>): NodeViewRenderer;\r\n"}}
